package form;

import DataBaseConnection.DataBaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenCongHoan
 */
public class frmAllProductAdmin extends javax.swing.JFrame {
	static Vector data = new Vector();
	static Vector listItem = new Vector();
	Vector listItemDeleted = new Vector();
	static Vector listID = new Vector();
	static int selectedRow = -1;
	int countClickDelete = 0;
	String linkImage;
	DefaultTableModel dataTable;
	static DefaultTableModel dataTable1;
	

	public frmAllProductAdmin() {
		initComponents();
	}
	
	private void displayDetails(int selectIndex) {
		System.out.println("selectIndex" + selectIndex);
		Vector vSelectedRow = (Vector) data.get(selectIndex);
		linkImage = (String) vSelectedRow.get(4);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbItem = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        imgItem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Window All Item Admin");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        tbItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng", "Link image"
            }
        ));
        tbItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbItem);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tất cả sản phẩm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDelete.setBackground(new java.awt.Color(153, 153, 153));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Xóa sản phẩm");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(153, 153, 153));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setText("Thêm sản phẩm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(153, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Sửa thông tin");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        imgItem.setBackground(new java.awt.Color(255, 255, 255));
        imgItem.setMaximumSize(new java.awt.Dimension(100, 64));
        imgItem.setMinimumSize(new java.awt.Dimension(100, 64));
        imgItem.setPreferredSize(new java.awt.Dimension(100, 64));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd)
                    .addComponent(imgItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(imgItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	// Button Delete
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
		System.out.println("selectedRow: " + selectedRow);
		if (selectedRow < 0) {
			JOptionPane.showMessageDialog(this, "Không có dữ liệu để xóa");
			return;
		} 
			
		if (selectedRow > listItem.size()) {
			JOptionPane.showMessageDialog(this, "Không có dữ liệu để xóa");
			return;
		}
		countClickDelete++;
		selectedRow = tbItem.getSelectedRow();
		String itemName = (String)listItem.get(selectedRow);
		listItem.remove(itemName);
		listItemDeleted.add(itemName);
		if (dataTable.getRowCount() > 0) {
			// Phương thức removeRow() sẽ xóa cả phần tử trong listItem
			// Và dòng bị click
			dataTable.removeRow(selectedRow);
		}
		
		System.out.println("countClickDelete: " + countClickDelete);
		System.out.println("listItemDeleted: " + listItemDeleted);
//		String sql = "DELETE FROM tbsanpham WHERE ma_san_pham IN (?)";

		// Tạo câu truy vấn SQL
		String sql = "DELETE FROM tbsanpham WHERE ma_san_pham IN (?";
		String s1 = ",?";
		String s2 = ")";
		if(countClickDelete == 1) {
			sql += s2;
		} else {
			for (int i = 1; i < countClickDelete; i++) {
				sql += s1;
			}
			sql += s2;
		}
		// end
		
		Connection cnt = null;
		PreparedStatement stm = null;
		try {
			int rowAffected = 0;
			cnt = DataBaseConnection.getConnection();
			stm = cnt.prepareStatement(sql);
			
			// Tạo ra n-1 lần truy vấn
			for(int i = 0; i < countClickDelete; i++) {
				stm.setString(i+1, (String)listItemDeleted.get(i));
			}
			// End
			
			// Câu lệnh stm.setString() hoặc stm.setInt()
			// Ta có thể tạo N câu lệnh stm.setString() hoặc stm.setInt()
			// stm.executeUpdate() sẽ những hiện N câu lệnh đó
			rowAffected = stm.executeUpdate();
			System.out.println("rowAffected: " + rowAffected);
			System.out.println("Đã xóa sản phẩm");
			JOptionPane.showMessageDialog(this, "Đã xóa sản phẩm");
//			JOptionPane.showMessageDialog(this, "Đã xóa sản phẩm");
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		selectedRow = -1;
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
		frmAddItem windowAddItem = new frmAddItem();
		windowAddItem.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
		if(selectedRow < 0) {
			JOptionPane.showMessageDialog(this, "Không có dữ liệu để sửa");
			return;
		}
		frmUpdateItemInfoAdmin windowUpdateItemInfo = new frmUpdateItemInfoAdmin();
		windowUpdateItemInfo.setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
		Vector columnName = new Vector();
		columnName.add("Mã sản phẩm");
		columnName.add("Tên sản phẩm");
		columnName.add("Đơn giá");
		columnName.add("Số lượng");
		columnName.add("Link image");
		
		Connection cnt = null;
		PreparedStatement stm = null;
		try {
			cnt = DataBaseConnection.getConnection();
			String sql = "SELECT id, ma_san_pham, ten_san_pham, gia, so_luong, link_image FROM tbsanpham";
			stm = cnt.prepareStatement(sql);
			ResultSet rs = stm.executeQuery();

			while (rs.next()) {
				Vector vRow = new Vector();
				listID.add(rs.getInt("id"));
				vRow.add(rs.getString("ma_san_pham"));
				listItem.add(rs.getString("ma_san_pham"));
				vRow.add(rs.getString("ten_san_pham"));
				vRow.add(rs.getInt("gia"));
				vRow.add(rs.getInt("so_luong"));
				vRow.add(rs.getString("link_image"));
				data.add(vRow);
			}
			System.out.println("listID" + listID);
			System.out.println("Data: " + data);
		dataTable = new DefaultTableModel(data, columnName);
		tbItem.setModel(dataTable);
		System.out.println("listItem" + listItem);
		
		dataTable1 = (DefaultTableModel) tbItem.getModel();
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(frmItemClient.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(frmSearch.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_formWindowOpened

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void tbItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbItemMouseClicked
        // TODO add your handling code here:
		selectedRow = tbItem.getSelectedRow();
		System.out.println("slectedRow: " + selectedRow);
		displayDetails(selectedRow);
		System.out.println("linkImage: " + linkImage);
		ImageIcon img = new ImageIcon(linkImage);
		imgItem.setIcon(img);
    }//GEN-LAST:event_tbItemMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(frmAllProductAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(frmAllProductAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(frmAllProductAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(frmAllProductAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new frmAllProductAdmin().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel imgItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbItem;
    // End of variables declaration//GEN-END:variables
}
