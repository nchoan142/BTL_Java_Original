/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import DataBaseConnection.DataBaseConnection;
import static form.frmSearch.itemCount;
import static form.frmSearch.itemInTable;
import static form.frmSearch.listItem;
import static form.frmSearch.listItemAmount;
import static form.frmSearch.listTtemAdded;
import static form.frmSearch.vListPriceItem;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenCongHoan
 */
public class frmAllProductClient extends javax.swing.JFrame {
	
	Vector data = new Vector();
	Vector listItem = new Vector();
	// Danh sách sản phẩm đã được thêm vào giỏ hàng
	static Vector listTtemAdded = new Vector();
	static Vector vListPriceItem = new Vector(); // vector ListPriceItem
	
	static String itemName;
	int itemPrice;
	int itemAmount;
	String itemLinkImage = "";
	int selectedRow;
	// Số lượng sản phẩm trong bảng
	int itemInTable;
	// Đếm số lượng của từng sản phẩm trong bảng khi click nút Add to card
	int[] itemCount;
	
	
	
	public frmAllProductClient() {
		initComponents();
	}

	private void displayDetails(int selectIndex) {
		Vector vSelectedRow = (Vector)data.get(selectIndex);
		String itemName = (String)vSelectedRow.get(0);
		lbItemName.setText(itemName);
	}
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        tbItemClient = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lbHNameItem = new javax.swing.JLabel();
        lbHPrice = new javax.swing.JLabel();
        lbHPrice1 = new javax.swing.JLabel();
        imgItem = new javax.swing.JLabel();
        btnAddToCard = new javax.swing.JButton();
        lbItemName = new javax.swing.JLabel();
        lbItemPrice = new javax.swing.JLabel();
        lbItemAmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("WindowAllProductClient");
        setMinimumSize(new java.awt.Dimension(530, 296));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane.setPreferredSize(new java.awt.Dimension(289, 402));

        tbItemClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Mã sản phẩm"
            }
        ));
        tbItemClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbItemClientMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(tbItemClient);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tất cả sản phẩm");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Chi tiết sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        lbHNameItem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHNameItem.setText("Tên sản phẩm:");

        lbHPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHPrice.setText("Giá tiền:");

        lbHPrice1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHPrice1.setText("Số lượng trong kho:");

        imgItem.setMaximumSize(new java.awt.Dimension(100, 63));
        imgItem.setMinimumSize(new java.awt.Dimension(100, 63));
        imgItem.setPreferredSize(new java.awt.Dimension(100, 63));

        btnAddToCard.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddToCard.setText("Add to card");
        btnAddToCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCardActionPerformed(evt);
            }
        });

        lbItemName.setText("lbItemName");

        lbItemPrice.setText("lbItemPrice");

        lbItemAmount.setText("lbItemAmount");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbHPrice1)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddToCard)
                            .addComponent(lbItemAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbHNameItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbHPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(imgItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHNameItem)
                    .addComponent(lbItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbHPrice)
                            .addComponent(lbItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(imgItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbHPrice1)
                    .addComponent(lbItemAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(btnAddToCard)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
		Vector columnName = new Vector();
		columnName.add("Tên sản phẩm");
		
		Connection cnt = null;
		PreparedStatement stm = null;
		String itemName = "";
		try {
			cnt = DataBaseConnection.getConnection();
			String sql = "SELECT ten_san_pham FROM tbsanpham";
			stm = cnt.prepareStatement(sql);
//			stm.setString(1, itemName);
			ResultSet rs = stm.executeQuery();

			while (rs.next()) {
				itemName = rs.getString("ten_san_pham");
				Vector vRow = new Vector();
				vRow.add(itemName);
				data.add(vRow);
				listItem.add(itemName);
			}
			itemInTable = listItem.size();
			itemCount = new int[itemInTable];
		DefaultTableModel dataTable = new DefaultTableModel(data, columnName);
		tbItemClient.setModel(dataTable);

		} catch (ClassNotFoundException ex) {
			Logger.getLogger(frmItemClient.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(frmSearch.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		
		
		stm = null;
		try {
			cnt = DataBaseConnection.getConnection();
			String sql = "SELECT so_luong, gia FROM tbsanpham WHERE ten_san_pham = ?";
			stm = cnt.prepareStatement(sql);
			for (int i = 0; i < listItem.size(); i++) {
				stm.setString(1, (String) listItem.get(i));
				ResultSet rs = stm.executeQuery();

				while (rs.next()) {
					itemPrice = rs.getInt("gia");
					vListPriceItem.add(itemPrice);
					listItemAmount.add(rs.getInt("so_luong"));
				}
			}

		} catch (ClassNotFoundException ex) {
			Logger.getLogger(frmItemClient.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(frmSearch.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_formWindowOpened

    private void tbItemClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbItemClientMouseClicked
        selectedRow = tbItemClient.getSelectedRow();
		displayDetails(selectedRow);
		itemName = lbItemName.getText();
		Connection cnt = null;
		PreparedStatement stm = null;
		try {
			cnt = DataBaseConnection.getConnection();
			String sql = "SELECT gia, so_luong, link_image FROM tbsanpham WHERE ten_san_pham = ?";
			stm = cnt.prepareStatement(sql);
			stm.setString(1, itemName);
			ResultSet rs = stm.executeQuery();

			while (rs.next()) {
				itemPrice = rs.getInt("gia");
				itemAmount = rs.getInt("so_luong");
				itemLinkImage = rs.getString("link_image");
			}

		} catch (ClassNotFoundException ex) {
			Logger.getLogger(frmItemClient.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(frmSearch.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		lbItemPrice.setText(itemPrice + "");
		lbItemAmount.setText(itemAmount + "");
		ImageIcon img = new ImageIcon(itemLinkImage);
		imgItem.setIcon(img);
    }//GEN-LAST:event_tbItemClientMouseClicked

    private void btnAddToCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCardActionPerformed
        // TODO add your handling code here:
		JOptionPane.showMessageDialog(this, "Đã thêm sản phẩm vào giỏ hàng");
		// Mỗi lần click nút Add to cart thì sẽ tăng số sản phẩm của dòng được chọn
		// Lên 1 đơn vị
		itemCount[selectedRow] += 1;
		if (itemCount[selectedRow] > itemAmount) {
			JOptionPane.showMessageDialog(this, "Số lượng sản phẩm đã vượt quá số lượng trong giỏ hàng");
			itemCount[selectedRow] = itemAmount;
		}
    }//GEN-LAST:event_btnAddToCardActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
//		System.out.println("listItem: " + listItem);
//		System.out.println("itemInTable: " + itemInTable);
//		for(int i = 0; i<listItem.size();i++) {
//			System.out.println(itemCount[i]);
//		}

		try {
			for (int i = 0; i < listItem.size(); i++) {
				Vector itemAdded = new Vector();
				if (itemCount[i] > 0) {
					itemAdded.add(listItem.get(i));
					itemAdded.add(itemCount[i]);
					itemAdded.add(vListPriceItem.get(i));
					int totolMoney = itemCount[i] * (int) vListPriceItem.get(i);
					itemAdded.add(totolMoney);
				} else {
					continue;
				}
				listTtemAdded.add(itemAdded);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}

		try {
			frmItemClient.listTtemAdded = listTtemAdded;
		} catch (Exception ex) {
			ex.printStackTrace();
		}

//		System.out.println("frmItemClient.listTtemAdded: " + frmItemClient.listTtemAdded);
//		System.out.println("listItem: " + listItem);
//		System.out.println("Size: " + frmItemClient.listTtemAdded.size());

		// Đặt lại giá trị của tất cả phẩm tử trong itemCount = 0
//		System.out.println("So luong san pham");
		for (int i = 0; i < listItem.size(); i++) {
//			System.out.println(itemCount[i]);
			itemCount[i] = 0;
		}
		// Xóa tất cả các phần tử trong listItem 
		// Để khi mở frmSearch, listItem sẽ được làm mới
		listItem.clear();
    }//GEN-LAST:event_formWindowClosing

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(frmAllProductClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(frmAllProductClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(frmAllProductClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(frmAllProductClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new frmAllProductClient().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCard;
    private javax.swing.JLabel imgItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel lbHNameItem;
    private javax.swing.JLabel lbHPrice;
    private javax.swing.JLabel lbHPrice1;
    private javax.swing.JLabel lbItemAmount;
    private javax.swing.JLabel lbItemName;
    private javax.swing.JLabel lbItemPrice;
    private javax.swing.JTable tbItemClient;
    // End of variables declaration//GEN-END:variables
}
