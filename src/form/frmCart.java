/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import DataBaseConnection.DataBaseConnection;
import static form.frmSearch.getItemName;
import static form.frmSearch.itemName;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NguyenCongHoan
 */
public class frmCart extends javax.swing.JFrame {

	int selectedRow;
	int selectedColumn;
	int totalAmount; // Tổng số sản phẩm
	int totalMoney; // Tổng số tiền
	int price; // Đơn giá
	int money; // Thành tiền
	int moneyUpdate; // Thành tiền sau khi click button Update
	String itemName;
	int itemAmount;
	int amount;
	String itemLinkImage;
	DefaultTableModel dataTable;
	Vector<Vector> listItem = frmItemClient.listTtemAdded;
	ArrayList<Integer> listItemAmount = new ArrayList<>();

	/**
	 * Creates new form frmCart
	 */
	public frmCart() {
		initComponents();
	}

	private void displayDetails(int selectIndex) {
		Vector vSelectedRow = (Vector) listItem.get(selectIndex);
		itemName = (String) vSelectedRow.get(0);
		itemAmount = (int) vSelectedRow.get(1);
//		price = (int)vSelectedRow.get(2);
//		money = (int)vSelectedRow.get(3);
//		System.out.println("itemName: " + itemName + "itemAmount: " + itemAmount +
//							"price: " + price + "money: " + money);
//		moneyUpdate = price * itemAmount;
//		System.out.println("vSelectedRow" + vSelectedRow);
		tfAmount.setText(itemAmount + "");
//		lbItemName.setText(itemName);
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListItem = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        imgItem = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        tfAmount = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbHTotalAmount = new javax.swing.JLabel();
        lbHTotalMoney = new javax.swing.JLabel();
        lbTotalAmount = new javax.swing.JLabel();
        lbTotalMoney = new javax.swing.JLabel();
        btnPayment = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Giỏ hàng");

        setTitle("WindowCart");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbListItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên sản phẩm", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        tbListItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbListItem);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnDelete.setBackground(new java.awt.Color(153, 153, 153));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Xóa sản phẩm");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        imgItem.setBackground(new java.awt.Color(255, 255, 255));
        imgItem.setMaximumSize(new java.awt.Dimension(100, 64));
        imgItem.setMinimumSize(new java.awt.Dimension(100, 64));
        imgItem.setPreferredSize(new java.awt.Dimension(100, 64));

        btnUpdate.setBackground(new java.awt.Color(153, 153, 153));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Cập nhật số lượng");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tfAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAmountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(imgItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imgItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Giỏ hàng");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbHTotalAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHTotalAmount.setForeground(new java.awt.Color(255, 0, 0));
        lbHTotalAmount.setText("Tổng số sản phẩm:");

        lbHTotalMoney.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbHTotalMoney.setForeground(new java.awt.Color(255, 0, 0));
        lbHTotalMoney.setText("Tổng số tiền:");

        lbTotalAmount.setText("lbTotalAmount");

        lbTotalMoney.setText("lbTotalMoney");

        btnPayment.setBackground(new java.awt.Color(153, 153, 153));
        btnPayment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPayment.setText("Thanh toán");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbHTotalMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTotalMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbHTotalAmount))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPayment)
                .addGap(29, 29, 29))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHTotalAmount)
                .addGap(20, 20, 20)
                .addComponent(lbTotalAmount)
                .addGap(20, 20, 20)
                .addComponent(lbHTotalMoney)
                .addGap(20, 20, 20)
                .addComponent(lbTotalMoney)
                .addGap(18, 18, 18)
                .addComponent(btnPayment)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
		System.out.println("listItem: " + listItem);
		try {
			Vector columnName = new Vector();
			columnName.add("Tên sản phẩm");
			columnName.add("Số lượng");
			columnName.add("Đơn giá");
			columnName.add("Thành tiền");
//			System.out.println("listItem: " + listItem);
			for (int i = 0; i < listItem.size(); i++) {
				totalAmount += (int) listItem.get(i).get(1);
				totalMoney += (int) listItem.get(i).get(3);
			}
			lbTotalAmount.setText(totalAmount + "");
			lbTotalMoney.setText(totalMoney + "");
//			System.out.println("totalAmount: " + totalAmount);
//			System.out.println("totalMoney: " + totalMoney);

			// DefaultTableModel có 2 tham số
			// Tham số thứ 1: số lượng dòng
			// Tham số thứ 2: số lượng cột
			dataTable = new DefaultTableModel(listItem, columnName);
			tbListItem.setModel(dataTable);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		
		
//		if(frmItemClient.listTtemAdded == null) {
//			System.out.println("True");
//		} else {
//			System.out.println("False");
//		}
//		System.out.println(getItemName());
		Connection cnt = null;
		PreparedStatement stm = null;
		try {		
			cnt = DataBaseConnection.getConnection();
			String sql = "SELECT so_luong FROM tbsanpham WHERE ten_san_pham = ?";
			for (int i = 0; i < listItem.size(); i++) {
				stm = cnt.prepareStatement(sql);
				stm.setString(1, (String)listItem.get(i).get(0));
				ResultSet rs = stm.executeQuery();
				while (rs.next()) {
					listItemAmount.add(rs.getInt("so_luong"));
				}
			}
			System.out.println("listItemAmount: " + listItemAmount);
		} catch (Exception ex) {
			ex.printStackTrace();
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_formWindowOpened

    private void tbListItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListItemMouseClicked
		// TODO add your handling code here:
		selectedRow = tbListItem.getSelectedRow();
//		selectedColumn = tbListItem.getSelectedColumn();
		displayDetails(selectedRow);

		Connection cnt = null;
		PreparedStatement stm = null;
		try {
			cnt = DataBaseConnection.getConnection();
			String sql = "SELECT link_image FROM tbsanpham WHERE ten_san_pham = ?";
			stm = cnt.prepareStatement(sql);
			stm.setString(1, itemName);
			ResultSet rs = stm.executeQuery();

			while (rs.next()) {
				itemLinkImage = rs.getString("link_image");
			}

		} catch (ClassNotFoundException ex) {
			Logger.getLogger(frmItemClient.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(frmSearch.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				if (stm != null) {
					stm.close();
				}

				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
		ImageIcon img = new ImageIcon(itemLinkImage);
		imgItem.setIcon(img);
    }//GEN-LAST:event_tbListItemMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
		// TODO add your handling code here:
		try {
			totalAmount -= (int) listItem.get(selectedRow).get(1);
			totalMoney -= (int) listItem.get(selectedRow).get(3);
			lbTotalAmount.setText(totalAmount + "");
			lbTotalMoney.setText(totalMoney + "");
			if (dataTable.getRowCount() > 0) {
				// Phương thức removeRow() sẽ xóa cả phần tử trong listItem
				// Và dòng bị click
				dataTable.removeRow(selectedRow);
			}
			System.out.println("listItem: " + listItem);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
		// TODO add your handling code here:
		
//		Connection cnt = null;
//		PreparedStatement stm = null;
		try {
			DefaultTableModel tableModel = (DefaultTableModel) tbListItem.getModel();
			String amountString = tfAmount.getText(); // tfAmount dạng chuỗi
			int amountInteger = Integer.parseInt(amountString); // tfAmount dạng int
			
//			cnt = DataBaseConnection.getConnection();
//			String sql = "SELECT so_luong FROM tbsanpham WHERE ten_san_pham = ?";
//			for (int i = 0; i < listItem.size(); i++) {
//				stm = cnt.prepareStatement(sql);
//				stm.setString(1, (String)listItem.get(i).get(0));
//				ResultSet rs = stm.executeQuery();
//				while (rs.next()) {
//					listItemAmount.add(rs.getInt("so_luong"));
//				}
//			}
			
			if(amountInteger > listItemAmount.get(selectedRow)) {
				System.out.println("");
				JOptionPane.showMessageDialog(this, "Số lượng sản phẩm vượt quá số lượng trong kho");
			} else {
				JOptionPane.showMessageDialog(this, "Cập nhật thành công");
				tableModel.setValueAt(amountInteger, selectedRow, 1);
				int amountInListItem = (int) listItem.get(selectedRow).get(1);
				int priceInListItem = (int) listItem.get(selectedRow).get(2);
				int moneyInListItem = amountInListItem * priceInListItem;
				//			listItem.get(selectedRow).set(3, moneyInListItem);
				tableModel.setValueAt(moneyInListItem, selectedRow, 3);
				// Update lbTotalAmount và lbTotalMoney
				totalAmount = 0;
				totalMoney = 0;
				for (int i = 0; i < listItem.size(); i++) {
					totalAmount += (int) listItem.get(i).get(1);
					totalMoney += (int) listItem.get(i).get(3);
				}
				lbTotalAmount.setText(totalAmount + "");
				lbTotalMoney.setText(totalMoney + "");
			}
			
		} catch (Exception ex) {
			ex.printStackTrace();
		}
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tfAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAmountActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_tfAmountActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
		// TODO add your handling code here:
		
		JOptionPane.showMessageDialog(frmCart.this,
			"Thanh toán thành công");
		ArrayList<Integer> listItemID = new ArrayList<>();
		ArrayList<String> listItemCode = new ArrayList<>();
		
		Connection cnt = null;
		PreparedStatement stm = null;
		PreparedStatement stm1 = null;
		PreparedStatement stm2 = null;
		PreparedStatement stm3 = null;
		
		System.out.println("listItemBeforeUpdate: " + listItem.size());
		System.out.println("listItemBeforeUpdate: " + listItem);
		System.out.println("listItemAmount: " + listItemAmount);
		
		try {
			cnt = DataBaseConnection.getConnection();
			// Update dữ liệu trong bảng tbsanpham
			String updateSQL = "UPDATE tbsanpham SET so_luong = ? WHERE ten_san_pham = ?";
			stm = cnt.prepareStatement(updateSQL);
			for (int i = 0; i < listItem.size(); i++) {
				amount = (int)listItem.get(i).get(1);
				int amountChange = listItemAmount.get(i) - amount;
				stm.setInt(1, amountChange);
				stm.setString(2, (String)listItem.get(i).get(0));
				stm.executeUpdate();
			}
			// Thêm dữ liệu vào bảng tbdonhang
			stm = null;
			int clientID = 0;
			String selectSQL = "SELECT ma_khach_hang FROM tbkhachhang WHERE user_name = ?";
			stm = cnt.prepareStatement(selectSQL);
			stm.setString(1, frmLogin.username);
			ResultSet rs = stm.executeQuery();
			while(rs.next()) {
				clientID = rs.getInt("ma_khach_hang");
			}
			
			String insertSQL = "INSERT INTO tbdonhang (ma_khach_hang) VALUES (?)";
			stm = cnt.prepareStatement(insertSQL);
			stm.setInt(1, clientID);
			stm.executeUpdate();
			// End
			
			// Thêm dữ liệu vào bảng tbchitietdonhang
			String selectSQL1 = "SELECT id, ma_san_pham FROM tbsanpham WHERE ten_san_pham = ?";
			for(int i = 0; i < listItem.size(); i++) {
				stm1 = cnt.prepareStatement(selectSQL1);

				stm1.setString(1, (String)listItem.get(i).get(0));
				rs = stm1.executeQuery();

				while (rs.next()) {
					listItemID.add(rs.getInt("id"));
					listItemCode.add(rs.getString("ma_san_pham"));
				}
			}
			
			int orderID = 0;
			stm = null;
			String selectSQL2 = "SELECT ma_don_hang FROM tbdonhang WHERE ma_khach_hang = ?";
			stm = cnt.prepareStatement(selectSQL2);
			stm.setInt(1, clientID);
			rs = stm.executeQuery();
			while(rs.next()) {
				orderID = rs.getInt("ma_don_hang");
			}
			
//			System.out.println("listItemID: " + listItemID);
//			System.out.println("listItemCode: " + listItemCode);
			
			String insertSQL1 = 
				"INSERT INTO tbchitietdonhang (id_san_pham, ma_san_pham, ma_don_hang, so_luong, don_gia, thanh_tien) "
				+ "VALUES (?, ?, ?, ?, ?, ?)";
			stm2 = cnt.prepareStatement(insertSQL1);
			for(int i = 0; i < listItem.size(); i++) {
				
//				System.out.println(listItemCode.get(i));
//				System.out.println((int)listItem.get(i).get(1));
//				System.out.println((int)listItem.get(i).get(2));
//				System.out.println((int)listItem.get(i).get(3));
//				System.out.println(listItemCode.get(i));
				stm2.setInt(1, listItemID.get(i));
				stm2.setString(2, listItemCode.get(i));
				stm2.setInt(3, orderID);
				stm2.setInt(4, (int)listItem.get(i).get(1));
				stm2.setInt(5, (int)listItem.get(i).get(2));
				stm2.setInt(6, (int)listItem.get(i).get(3));
				System.out.println("True");
				int rowsInserted  =  stm2.executeUpdate();
				if (rowsInserted  > 0) {
					System.out.println("Dữ liệu đã được thêm thành công!");
				}
			}
			// End
			
			// Thêm dữ liệu vào bảng tbthongtindathang
			stm2 = null;
			String insertSQL2 = "INSERT INTO tbthongtindathang (ma_khach_hang, user_name, so_luong_san_pham, gia_tri_don_hang)"
									+ "VALUES (?, ?, ?, ?)";
			stm3 = cnt.prepareStatement(insertSQL2);
			stm3.setInt(1, clientID);
			stm3.setString(2, frmLogin.username);
			stm3.setInt(3, totalAmount);
			stm3.setInt(4, totalMoney);
			stm3.executeUpdate();
			
			System.out.println("Da them du lieu vao bang");
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(frmItemClient.class.getName()).log(Level.SEVERE, null, ex);
		} catch (SQLException ex) {
			Logger.getLogger(frmSearch.class.getName()).log(Level.SEVERE, null, ex);
		} finally {
			try {
				if (stm1 != null) {
					stm1.close();
				}
				
				if (stm2 != null) {
					stm2.close();
				}
				
				if (stm3 != null) {
					stm3.close();
				}
				
				if (cnt != null) {
					cnt.close();
				}

			} catch (SQLException ex) {
				Logger.getLogger(frmLogin.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
    }//GEN-LAST:event_btnPaymentActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(frmCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(frmCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(frmCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(frmCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new frmCart().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel imgItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbHTotalAmount;
    private javax.swing.JLabel lbHTotalMoney;
    private javax.swing.JLabel lbTotalAmount;
    private javax.swing.JLabel lbTotalMoney;
    private javax.swing.JTable tbListItem;
    private javax.swing.JTextField tfAmount;
    // End of variables declaration//GEN-END:variables
}
